#!/usr/bin/env bash

TODO_FILE="$HOME/todo.txt"
touch "$TODO_FILE"
usage_string="Usage: $0 [add <todo> | rm <number> | nuke]"

_todo_comp() {
    local cur prev opts
    COMPREPLY=()  # Array to hold the completion suggestions
    cur="${COMP_WORDS[COMP_CWORD]}"  # Current word to complete

    opts="add rm nuke"

    if [[ ${cur} == * ]]; then
        COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
    fi
    return 0
}

complete -F _todo_comp t

if [ $# -eq 0 ]; then
    if [ -s "$TODO_FILE" ]; then
        echo "Your current to-dos:"
        nl -w2 -s'. ' "$TODO_FILE"
    else
        echo $usage_string
    fi
elif [ "$1" == "add" ] && [ $# -gt 1 ]; then
    shift
    echo "$*" >> "$TODO_FILE"
    "$0" # Display the updated list
elif [ "$1" == "rm" ] && [ $# -eq 2 ]; then
    TODO_NUMBER=$2
    if ! [[ "$TODO_NUMBER" =~ ^[0-9]+$ ]]; then
        echo "Error: Please provide a valid number."
        exit 1
    fi

    if [ -s "$TODO_FILE" ]; then
        sed -i "${TODO_NUMBER}d" "$TODO_FILE"
        "$0"  # Display the updated list
    else
        echo "No todos to remove."
    fi
elif [ "$1" == "nuke" ]; then
    if [ -s "$TODO_FILE" ]; then
        read -p "Are you sure you want to clear all tasks? (Y/n): " CONFIRM
        CONFIRM=${CONFIRM:-y}  # Default to 'y' if ENTER is pressed
        if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
            > "$TODO_FILE"
            echo "All tasks have been cleared."
        else
            echo "Nuke operation cancelled."
        fi
    else
        echo "No todos to clear."
    fi
else
    echo $usage_string
fi

